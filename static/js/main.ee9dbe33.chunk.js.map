{"version":3,"sources":["Display.js","App.js","serviceWorker.js","index.js"],"names":["Display","val","clk","player","winner","reset","TwoP","Bot","className","style","margin","background","color","onClick","id","App","distinct","value","index","self","indexOf","event","state","gameplay","arr","gametype","i","currentTarget","includes","newgp","slice","newarr","filter","push","setState","chk_winner","length","bot_turn","OnePlayer","TwoPlayer","reset_game","Math","floor","random","toString","winchk","document","querySelector","innerHTML","this","text","disp_text","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ee9dbe33.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Display({val, clk, player, winner, reset, TwoP, Bot}) {\r\n\treturn (\r\n      <div>\r\n\t      <div className='bg-light-blue pa3'>\r\n\t    \t<h1 className='red'>Tic Tac Toe</h1>\r\n    \t\t<button style={{margin: \"5px\", background: \"black\", color: \"white\"}} onClick={Bot}>1-Player</button>\r\n    \t\t<button style={{margin: \"5px\", background: \"black\", color: \"white\"}} onClick={TwoP}>2-Player</button>\r\n    \t\t<button style={{margin: \"5px\", background: \"black\", color: \"white\"}} onClick={reset}>Reset</button>\r\n\t    \t<h2 className='white' id='player'>{player}</h2>\r\n\t    \t<div className='flex justify-center'>\r\n\t    \t\t<button className='w4 h4' id='0' onClick={clk}><h1>{val[0]}</h1></button>\r\n\t    \t\t<button className='w4 h4' id='1' onClick={clk}><h1>{val[1]}</h1></button>\r\n\t    \t\t<button className='w4 h4' id='2' onClick={clk}><h1>{val[2]}</h1></button>\r\n\t    \t</div>\r\n\t    \t<div className='flex justify-center'>\r\n\t    \t\t<button className='w4 h4' id='3' onClick={clk}><h1>{val[3]}</h1></button>\r\n\t    \t\t<button className='w4 h4' id='4' onClick={clk}><h1>{val[4]}</h1></button>\r\n\t    \t\t<button className='w4 h4' id='5' onClick={clk}><h1>{val[5]}</h1></button>\r\n\t    \t</div>\r\n\t    \t<div className='flex justify-center'>\r\n\t    \t\t<button className='w4 h4' id='6' onClick={clk}><h1>{val[6]}</h1></button>\r\n\t    \t\t<button className='w4 h4' id='7' onClick={clk}><h1>{val[7]}</h1></button>\r\n\t    \t\t<button className='w4 h4' id='8' onClick={clk}><h1>{val[8]}</h1></button>\r\n\t    \t</div>\r\n\t    \t<h3 id='msg'>{winner}</h3>\r\n\t      </div>\r\n\t      <div>\r\n\t      \t<footer className='white bottom-0'>This game is made by SHREY WAHI</footer>\r\n\t      </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Display;","import React, {Component} from 'react';\nimport Display from './Display';\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            player: 'X',\n            gameplay: [],\n            winner: '',\n            arr: [],\n            gametype: 'Bot',\n        }\n    }\n\n    distinct = (value, index, self) => {\n        return self.indexOf(value) === index;\n    }\n\n    onClick = (event) => {\n        const {player, gameplay, arr, winner, gametype} = this.state;\n        const i = event.currentTarget.id;\n        if(!arr.includes(i) && !winner) {\n            const newgp = gameplay.slice();\n            newgp[i] = player;\n            const newarr = arr.filter(this.distinct).slice();\n            newarr.push(i);\n            this.setState({gameplay: newgp, arr: newarr});\n            \n            if (gametype === '2P') {\n                if (player === 'X')\n                    this.setState({player: 'O'}, () => {this.chk_winner()});\n                else\n                    this.setState({player: 'X'}, () => {this.chk_winner()});\n            } else {\n                this.setState({player: 'O'}, () => {this.chk_winner()});\n                if (winner)\n                    this.setState({player:'O'})\n                else if (!winner && arr.length < 7)\n                    this.setState({player: 'O'}, () => {this.bot_turn()});\n            }\n        }\n    }\n\n    OnePlayer = (event) => {\n        this.setState({player: 'X', gameplay: [], winner: '', arr: [], gametype: 'Bot'});\n    }\n    \n    TwoPlayer = (event) => {\n        this.setState({player: 'X', gameplay: [], winner: '', arr: [], gametype: '2P'});\n    }\n\n    reset_game = (event) => {\n        this.setState({player: 'X', gameplay: [], winner: '', arr: []});\n    }\n\n    bot_turn = (event) => {\n        const {player, gameplay, arr, winner} = this.state;\n        const i = (Math.floor(Math.random() * 9)).toString();\n        if (arr.includes(i)) {\n            this.bot_turn();\n        } else if (!arr.includes(i) && !winner) {\n            const newgp = gameplay.slice();\n            newgp[i] = player;\n            const newarr = arr.filter(this.distinct).slice();\n            newarr.push(i);\n            this.setState({gameplay: newgp, arr: newarr, player: 'X'}, () => {this.chk_winner()});\n        }\n    }\n\n    chk_winner = () => {\n        const {gameplay, arr} = this.state;\n        const winchk = gameplay.slice();\n        if ((winchk[0] === 'X' && winchk[1] === 'X' && winchk[2] === 'X') || (winchk[3] === 'X' && winchk[4] === 'X' && winchk[5] === 'X') || (winchk[6] === 'X' && winchk[7] === 'X' && winchk[8] === 'X') || (winchk[0] === 'X' && winchk[3] === 'X' && winchk[6] === 'X') || (winchk[2] === 'X' && winchk[5] === 'X' && winchk[8] === 'X') || (winchk[0] === 'X' && winchk[4] === 'X' && winchk[8] === 'X') || (winchk[2] === 'X' && winchk[4] === 'X' && winchk[6] === 'X') || (winchk[1] === 'X' && winchk[4] === 'X' && winchk[7] === 'X')) {\n                this.setState({winner: 'WINNER IS PLAYER X'});\n                document.querySelector(\"#player\").innerHTML = '';\n            }\n            else if ((winchk[0] === 'O' && winchk[1] === 'O' && winchk[2] === 'O') || (winchk[3] === 'O' && winchk[4] === 'O' && winchk[5] === 'O') || (winchk[6] === 'O' && winchk[7] === 'O' && winchk[8] === 'O') || (winchk[0] === 'O' && winchk[3] === 'O' && winchk[6] === 'O') || (winchk[2] === 'O' && winchk[5] === 'O' && winchk[8] === 'O') || (winchk[0] === 'O' && winchk[4] === 'O' && winchk[8] === 'O') || (winchk[2] === 'O' && winchk[4] === 'O' && winchk[6] === 'O') || (winchk[1] === 'O' && winchk[4] === 'O' && winchk[7] === 'O')) {\n                this.setState({winner: 'WINNER IS PLAYER O'});\n                document.querySelector(\"#player\").innerHTML = '';\n            }\n            else if (arr.length === 9) {\n                this.setState({winner: 'DRAW'});\n                document.querySelector(\"#player\").innerHTML = '';\n            }\n    }\n\n    render() {\n        const {player, gameplay, text, winner} = this.state;\n        return (\n            <div className='tc'>\n                <Display player={'PLAYER ' + player} val={gameplay} clk={this.onClick} Bot={this.OnePlayer} TwoP={this.TwoPlayer} reset={this.reset_game} disp_text={text} winner={winner}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}